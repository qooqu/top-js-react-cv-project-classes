{"version":3,"sources":["Components/Input.js","Components/Category.js","App.js","index.js"],"names":["Input","props","handleChange","bind","event","this","id","valueType","target","value","className","editActive","type","placeholder","readOnly","onChange","Component","Category","state","items","newItem","handleAdd","handleDelete","newObj","schema","forEach","thing","uniqid","stateTemp","push","setState","preventDefault","index","findIndex","ele","attributes","splice","cat","map","item","onClick","App","contact","education","experience","handleSubmit","editActiveTemp","onSubmit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b07074a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Input extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.props.handleChange(\r\n            this.props.id,\r\n            this.props.valueType,\r\n            event.target.value\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <label>\r\n                    {`${this.props.valueType}: `}\r\n                    <input\r\n                        // format or type or someth should be conditional on valueType\r\n                        className={this.props.editActive ? \"editActive\" : null}\r\n                        type=\"text\"\r\n                        placeholder=\"info please\"\r\n                        value={this.props.value}\r\n                        readOnly={!this.props.editActive}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./Input\";\r\nimport uniqid from \"uniqid\";\r\n\r\nclass Category extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n        };\r\n        this.newItem = this.newItem.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    newItem() {\r\n        let newObj = {};\r\n        this.props.schema.forEach((thing) => {\r\n            newObj[thing] = \"\";\r\n        });\r\n        newObj.id = uniqid();\r\n        let stateTemp = this.state.items;\r\n        stateTemp.push(newObj);\r\n        this.setState({\r\n            items: stateTemp,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.newItem();\r\n    }\r\n\r\n    handleAdd(event) {\r\n        event.preventDefault();\r\n        this.newItem();\r\n    }\r\n\r\n    handleChange(id, valueType, value) {\r\n        let stateTemp = this.state.items;\r\n        let index = stateTemp.findIndex((ele) => ele.id === id);\r\n        stateTemp[index][valueType] = value;\r\n        this.setState({\r\n            items: stateTemp,\r\n        });\r\n    }\r\n\r\n    handleDelete(event) {\r\n        event.preventDefault();\r\n        let id = event.target.attributes.id.value;\r\n        let stateTemp = this.state.items;\r\n        let index = stateTemp.findIndex((ele) => ele.id === id);\r\n        stateTemp.splice(index, 1);\r\n        this.setState({\r\n            items: stateTemp,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.props.cat}</h1>\r\n                {this.state.items.map((item) => (\r\n                    <div key={item.id}>\r\n                        {this.props.schema.map((thing, index) =>\r\n                            thing === \"id\" ? null : (\r\n                                <Input\r\n                                    key={`${item.id}-${index}`}\r\n                                    id={item.id}\r\n                                    valueType={thing}\r\n                                    value={item[thing]}\r\n                                    editActive={this.props.editActive}\r\n                                    handleChange={this.handleChange}\r\n                                />\r\n                            )\r\n                        )}\r\n                        {this.props.cat !== \"Contact\" &&\r\n                        this.props.editActive ? (\r\n                            <button id={item.id} onClick={this.handleDelete}>\r\n                                delete\r\n                            </button>\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n                {this.props.cat !== \"Contact\" && this.props.editActive ? (\r\n                    <button onClick={this.handleAdd}>add</button>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Category;\r\n","import React, { Component } from \"react\";\nimport Category from \"./Components/Category\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            schema: {\n                contact: [\"id\", \"name\", \"email\", \"phone\"],\n                education: [\"id\", \"name\", \"degree\", \"year\"],\n                experience: [\"id\", \"name\", \"title\", \"yearStart\", \"yearEnd\"],\n            },\n            editActive: null,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            editActive: false,\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let editActiveTemp = !this.state.editActive;\n        this.setState({\n            editActive: editActiveTemp,\n        });\n    }\n\n    render() {\n        return (\n            <div id=\"App\">\n                <form onSubmit={this.handleSubmit}>\n                    <Category\n                        cat=\"Contact\"\n                        schema={this.state.schema.contact}\n                        editActive={this.state.editActive}\n                    />\n                    <Category\n                        cat=\"Education\"\n                        schema={this.state.schema.education}\n                        editActive={this.state.editActive}\n                    />\n                    <Category\n                        cat=\"Experience\"\n                        schema={this.state.schema.experience}\n                        editActive={this.state.editActive}\n                    />\n                    <button type=\"submit\">\n                        {this.state.editActive ? \"submit\" : \"edit\"}\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}